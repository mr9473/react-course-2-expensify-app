// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseList with empty message 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <p>
        No expenses
    </p>
</div>,
  "nodes": Array [
    <div>
      <p>
            No expenses
      </p>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ExpenseList
        expenses={Array []}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "expenses": Array [],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <p>
                    No expenses
          </p>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div>
          <p>
                    No expenses
          </p>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ExpenseList
    expenses={Array []}
/>,
}
`;

exports[`should render ExpenseList with expenses 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <ExpenseListItem
        amount={195}
        createdAt={0}
        description="Gum"
        id="1"
        note=""
    />
    <ExpenseListItem
        amount={109500}
        createdAt={-345600000}
        description="Rent"
        id="2"
        note=""
    />
    <ExpenseListItem
        amount={4500}
        createdAt={345600000}
        description="Credit Card"
        id="3"
        note=""
    />
</div>,
  "nodes": Array [
    <div>
      <ExpenseListItem
            amount={195}
            createdAt={0}
            description="Gum"
            id="1"
            note=""
      />
      <ExpenseListItem
            amount={109500}
            createdAt={-345600000}
            description="Rent"
            id="2"
            note=""
      />
      <ExpenseListItem
            amount={4500}
            createdAt={345600000}
            description="Credit Card"
            id="3"
            note=""
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ExpenseList
        expenses={
                Array [
                        Object {
                          "amount": 195,
                          "createdAt": 0,
                          "description": "Gum",
                          "id": "1",
                          "note": "",
                        },
                        Object {
                          "amount": 109500,
                          "createdAt": -345600000,
                          "description": "Rent",
                          "id": "2",
                          "note": "",
                        },
                        Object {
                          "amount": 4500,
                          "createdAt": 345600000,
                          "description": "Credit Card",
                          "id": "3",
                          "note": "",
                        },
                      ]
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "expenses": Array [
            Object {
              "amount": 195,
              "createdAt": 0,
              "description": "Gum",
              "id": "1",
              "note": "",
            },
            Object {
              "amount": 109500,
              "createdAt": -345600000,
              "description": "Rent",
              "id": "2",
              "note": "",
            },
            Object {
              "amount": 4500,
              "createdAt": 345600000,
              "description": "Credit Card",
              "id": "3",
              "note": "",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <ExpenseListItem
                    amount={195}
                    createdAt={0}
                    description="Gum"
                    id="1"
                    note=""
          />
          <ExpenseListItem
                    amount={109500}
                    createdAt={-345600000}
                    description="Rent"
                    id="2"
                    note=""
          />
          <ExpenseListItem
                    amount={4500}
                    createdAt={345600000}
                    description="Credit Card"
                    id="3"
                    note=""
          />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <ExpenseListItem
                    amount={195}
                    createdAt={0}
                    description="Gum"
                    id="1"
                    note=""
          />
          <ExpenseListItem
                    amount={109500}
                    createdAt={-345600000}
                    description="Rent"
                    id="2"
                    note=""
          />
          <ExpenseListItem
                    amount={4500}
                    createdAt={345600000}
                    description="Credit Card"
                    id="3"
                    note=""
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ExpenseList
    expenses={
        Array [
            Object {
              "amount": 195,
              "createdAt": 0,
              "description": "Gum",
              "id": "1",
              "note": "",
            },
            Object {
              "amount": 109500,
              "createdAt": -345600000,
              "description": "Rent",
              "id": "2",
              "note": "",
            },
            Object {
              "amount": 4500,
              "createdAt": 345600000,
              "description": "Credit Card",
              "id": "3",
              "note": "",
            },
          ]
    }
/>,
}
`;
